LoadFieldEliminationStaticTest
---
InlineFunctionCalls
Simplify
BeginInlinedFunctionElimination
LoadFieldElimination
Simplify
---
RemoveLoadFieldBeforeStoreField
---
class C:
  def __init__(self):
    self.a = 3
    self.b = 4

def test():
  return C()
---
fun jittestmodule:test {
  bb 0 {
    v22:Nullptr = LoadConst<Nullptr>
    v23:Nullptr = LoadConst<Nullptr>
    v24:Nullptr = LoadConst<Nullptr>
    v3:ObjectUser[C:Exact] = TpAlloc<C> {
      FrameState {
        NextInstrOffset 4
      }
    }
    v4:MortalFunc[function:0xdeadbeef] = LoadConst<MortalFunc[function:0xdeadbeef]>
    v14:ImmortalLongExact[3] = LoadConst<ImmortalLongExact[3]>
    StoreField<a@16> v3 v14 v24
    v17:ImmortalLongExact[4] = LoadConst<ImmortalLongExact[4]>
    StoreField<b@24> v3 v17 v24
    v20:NoneType = LoadConst<NoneType>
    Return v3
  }
}
---
RemoveLoadFieldAfterStoreField
---
class C:
  def __init__(self):
    self.a = 3
    self.b = 4

def test():
  c = C()
  return c.a + c.b
---
fun jittestmodule:test {
  bb 0 {
    v7:Nullptr = LoadConst<Nullptr>
    v35:Nullptr = LoadConst<Nullptr>
    v36:Nullptr = LoadConst<Nullptr>
    v37:Nullptr = LoadConst<Nullptr>
    v8:ObjectUser[C:Exact] = TpAlloc<C> {
      FrameState {
        NextInstrOffset 4
        Locals<1> v7
      }
    }
    v9:MortalFunc[function:0xdeadbeef] = LoadConst<MortalFunc[function:0xdeadbeef]>
    v27:ImmortalLongExact[3] = LoadConst<ImmortalLongExact[3]>
    StoreField<a@16> v8 v27 v37
    v30:ImmortalLongExact[4] = LoadConst<ImmortalLongExact[4]>
    StoreField<b@24> v8 v30 v37
    v33:NoneType = LoadConst<NoneType>
    UseType<LongExact> v27
    UseType<LongExact> v30
    UseType<ImmortalLongExact[3]> v27
    UseType<ImmortalLongExact[4]> v30
    v39:ImmortalLongExact[7] = LoadConst<ImmortalLongExact[7]>
    Return v39
  }
}
---
DontRemoveLoadFieldAcrossMemoryEffects
---
class C:
  def __init__(self):
    self.a = 3

def test():
  c = C()
  print(c)
  return c.a
---
fun jittestmodule:test {
  bb 0 {
    v7:Nullptr = LoadConst<Nullptr>
    v30:Nullptr = LoadConst<Nullptr>
    v31:Nullptr = LoadConst<Nullptr>
    v8:ObjectUser[C:Exact] = TpAlloc<C> {
      FrameState {
        NextInstrOffset 4
        Locals<1> v7
      }
    }
    v9:MortalFunc[function:0xdeadbeef] = LoadConst<MortalFunc[function:0xdeadbeef]>
    v25:ImmortalLongExact[3] = LoadConst<ImmortalLongExact[3]>
    StoreField<a@16> v8 v25 v31
    v28:NoneType = LoadConst<NoneType>
    v12:OptObject = LoadGlobalCached<0; "print">
    v13:MortalObjectUser[builtin_function_or_method:print:0xdeadbeef] = GuardIs<0xdeadbeef> v12 {
      Descr 'LOAD_GLOBAL: print'
    }
    v15:Object = VectorCall<1> v13 v8 {
      FrameState {
        NextInstrOffset 20
        Locals<1> v8
      }
    }
    v17:OptObject = LoadField<a@16, OptObject, borrowed> v8
    v18:Object = CheckField<"a"> v17 {
      GuiltyReg v8
      FrameState {
        NextInstrOffset 26
        Locals<1> v8
      }
    }
    Return v18
  }
}
---
If
---
class C:
  def __init__(self):
    self.a = 3
    self.b = 4

def test(cond):
  c = C()
  if cond is True:  # No deopt
    return c.a
  return c.b
---
fun jittestmodule:test {
  bb 0 {
    v10:Object = LoadArg<0; "cond">
    v11:Nullptr = LoadConst<Nullptr>
    v47:Nullptr = LoadConst<Nullptr>
    v48:Nullptr = LoadConst<Nullptr>
    v49:Nullptr = LoadConst<Nullptr>
    v12:ObjectUser[C:Exact] = TpAlloc<C> {
      FrameState {
        NextInstrOffset 4
        Locals<2> v10 v11
      }
    }
    v13:MortalFunc[function:0xdeadbeef] = LoadConst<MortalFunc[function:0xdeadbeef]>
    v39:ImmortalLongExact[3] = LoadConst<ImmortalLongExact[3]>
    StoreField<a@16> v12 v39 v49
    v42:ImmortalLongExact[4] = LoadConst<ImmortalLongExact[4]>
    StoreField<b@24> v12 v42 v49
    v45:NoneType = LoadConst<NoneType>
    v17:ImmortalBool[True] = LoadConst<ImmortalBool[True]>
    v26:CBool = PrimitiveCompare<Equal> v10 v17
    v27:Bool = PrimitiveBoxBool v26
    UseType<Bool> v27
    v28:ImmortalBool[True] = LoadConst<ImmortalBool[True]>
    v30:CInt32 = IntConvert<CInt32> v26
    CondBranch<1, 2> v30
  }

  bb 1 (preds 0) {
    Return v39
  }

  bb 2 (preds 0) {
    Return v42
  }
}
---
Diamond
---
class Empty:
  pass

class C:
  def __init__(self):
    self.a = 3

def test(cond):
  c = C()
  if cond is True:  # No deopt
    c.a = 4
  else:
    c.a = 5
  Empty()  # Avoid tail duplication
  return c.a
---
fun jittestmodule:test {
  bb 0 {
    v14:Object = LoadArg<0; "cond">
    v15:Nullptr = LoadConst<Nullptr>
    v52:Nullptr = LoadConst<Nullptr>
    v54:Nullptr = LoadConst<Nullptr>
    v56:Nullptr = LoadConst<Nullptr>
    v16:ObjectUser[C:Exact] = TpAlloc<C> {
      FrameState {
        NextInstrOffset 4
        Locals<2> v14 v15
      }
    }
    v17:MortalFunc[function:0xdeadbeef] = LoadConst<MortalFunc[function:0xdeadbeef]>
    v47:ImmortalLongExact[3] = LoadConst<ImmortalLongExact[3]>
    StoreField<a@16> v16 v47 v56
    v50:NoneType = LoadConst<NoneType>
    v21:ImmortalBool[True] = LoadConst<ImmortalBool[True]>
    v36:CBool = PrimitiveCompare<Equal> v14 v21
    v37:Bool = PrimitiveBoxBool v36
    UseType<Bool> v37
    v38:ImmortalBool[True] = LoadConst<ImmortalBool[True]>
    v40:CInt32 = IntConvert<CInt32> v36
    CondBranch<1, 2> v40
  }

  bb 1 (preds 0) {
    v24:ImmortalLongExact[4] = LoadConst<ImmortalLongExact[4]>
    StoreField<a@16> v16 v24 v47
    Branch<3>
  }

  bb 2 (preds 0) {
    v27:ImmortalLongExact[5] = LoadConst<ImmortalLongExact[5]>
    StoreField<a@16> v16 v27 v47
    Branch<3>
  }

  bb 3 (preds 1, 2) {
    v53:Nullptr = LoadConst<Nullptr>
    v55:Nullptr = LoadConst<Nullptr>
    v57:Nullptr = LoadConst<Nullptr>
    v32:ObjectUser[Empty:Exact] = TpAlloc<Empty> {
      FrameState {
        NextInstrOffset 38
        Locals<2> v14 v16
      }
    }
    v34:OptObject = LoadField<a@16, OptObject, borrowed> v16
    v35:Object = CheckField<"a"> v34 {
      GuiltyReg v16
      FrameState {
        NextInstrOffset 44
        Locals<2> v14 v16
      }
    }
    Return v35
  }
}
---
